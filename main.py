"""–ì–ª–∞–≤–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –±–æ—Ç–∞. –ù–∞ –¥–∞–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —è–≤–ª—è–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–º –æ–±—Ä–∞–∑—Ü–æ–º

https://github.com/tankalxat34/ranepa-quest-victoryday

–ë–û–¢ –ó–ê–ü–£–©–ï–ù
"""
import telebot
from telebot import types
import botlib
import random
import importlib
import json
import collections

# —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞
kb_end_quest = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
kb_end_quest.add(types.KeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–≤—è–∑—å"))

# –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –º–æ–π ID –∫–∞–∫ –≥–ª–∞–≤–Ω—ã–π
BOSS_ID = botlib.env.TELEGRAM_YOUR_ID

# —Å–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ö–û–ú–ê–ù–î–ê: –î–ï–ô–°–¢–í–ò–ï –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
dict_admin_ui = {
    "–æ–±–Ω–æ–≤–∏—Ç—å": {
        "function": lambda: importlib.reload(botlib),
        "description": f"–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–µ–ø–ª–∏–∫–∏ –±–æ—Ç–∞. –ü–æ—Å–ª–µ –ª—é–±—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≤–µ—Ç–∫–µ {botlib.CONST_GITHUB_CONTENT_BRANCH_NAME} –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –±–æ—Ç –ø–æ–ª—É—á–∏–ª —ç—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è"
    },
    "—Å–ø–∏—Å–æ–∫": {
        "function": lambda: getPlayerList(),
        "description": "–≤—ã—Å—ã–ª–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—å —Ä–∞–∑ –ø–∏—Å–∞–ª–∏ –±–æ—Ç—É, –∏ –∏—Ö —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å"
    },
    "–ø–æ–±–µ–¥–∏—Ç–µ–ª—å": {
        "function": lambda: getPlayerWinnersList(),
        "description": "–≤—ã—Å—ã–ª–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∫–≤–µ—Å—Ç–∞, –∞ —Ç–∞–∫–∂–µ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"
    },
    "–ø–æ–º–æ—â—å": {
        "function": lambda: getHelpAdmin(),
        "description": "–≤—ã—Å—ã–ª–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ"
    }
}
# –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ —Ñ–∞–π–ª–∞ —Å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏
TOKEN = botlib.env.TELEGRAM_TOKEN

# —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = telebot.TeleBot(TOKEN)

print(__doc__)


def setZeroProgress(user_id=BOSS_ID):
    """–û–±–Ω—É–ª—è–µ—Ç –º–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –±–æ—Ç–µ"""
    botlib.list_players[str(user_id)]["step"] = 0
    botlib.github.commit(filepath=botlib.CONST["userProgressFile"], filecontent=json.dumps(botlib.list_players), branch=botlib.CONST_GITHUB_CONTENT_BRANCH_NAME, commit_message=f'{botlib.list_players[str(user_id)]["username"]} ({user_id}) ‚Üí {botlib.list_players[str(user_id)]["step"] - 1}')


def getHelpAdmin():
    """–í—ã—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    result = "üçï –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–≥—É—Ç –≤—ã–∑–≤–∞—Ç—å –∑–∞–≤–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞! –í—ã–ø–æ–ª–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –æ—Å–æ–±–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏!\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n"
    for key in dict_admin_ui.keys():
        result += f"*{key}*" + " - " + dict_admin_ui[key]["description"] + "\n\n"
    return result


def getMaxQuestLevel():
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–º–µ—Ä —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∫–≤–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ–±–µ–¥–Ω—ã–º"""
    return len(botlib.CONST["messages"].keys()) - 1


def increaseProgressLevel(user_id):
    """–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 1 –∏ –∫–æ–º–º–∏—Ç–∏—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ"""
    # –∏–∑–º–µ–Ω—è–µ–º —ç—Ç–∞–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ 1
    botlib.list_players[str(user_id)]["step"] += 1
    # –∏ –∫–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –Ω–∞ github –≤ –≤–µ—Ç–∫–µ content
    botlib.github.commit(filepath=botlib.CONST["userProgressFile"], filecontent=json.dumps(botlib.list_players), branch=botlib.CONST_GITHUB_CONTENT_BRANCH_NAME, commit_message=f'{botlib.list_players[str(user_id)]["username"]} ({user_id}) ‚Üí {botlib.list_players[str(user_id)]["step"] - 1}')


def getPlayerList(start_message="–°–ü–ò–°–û–ö –ò–ì–†–û–ö–û–í:\nstep user_id username\n\n"):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π id –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –±–æ—Ç—É –Ω–∞ –º–æ–º–µ–Ω—Ç –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏. –ò–¥–µ—Ç —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–æ–≥–ª–∞—Å–Ω–æ —ç—Ç–∞–ø—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç"""
    answer = "" + start_message
    local_dict = dict()

    for user_id in botlib.list_players.keys():
        try:
            local_dict[botlib.list_players[str(user_id)]['step'] - 1].append({"user_id": user_id, "username": botlib.list_players[str(user_id)]['username']})
        except Exception:
            local_dict[botlib.list_players[str(user_id)]['step'] - 1] = list()
            local_dict[botlib.list_players[str(user_id)]['step'] - 1].append({"user_id": user_id, "username": botlib.list_players[str(user_id)]['username']})

    sorted_local_dict = collections.OrderedDict(sorted(local_dict.items(), reverse=True))

    for step in sorted_local_dict.keys():
        for section in sorted_local_dict[step]:
            answer += f'{step} {section["user_id"]} @{section["username"]}\n'

    # for user_id in botlib.list_players.keys():
    #     answer += f"{user_id} @{botlib.list_players[str(user_id)]['username']} {botlib.list_players[str(user_id)]['step'] - 1}\n"
    return answer


def getCountOfWinners():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∫–≤–µ—Å—Ç–∞"""
    counter = 0
    for user_id in botlib.list_players.keys():
        if botlib.list_players[str(user_id)]["step"] == getMaxQuestLevel():
            counter += 1
    return counter


def getPlayerWinnersList(start_message=f"–°–ü–ò–°–û–ö –ü–û–ë–ï–î–ò–¢–ï–õ–ï–ô:\n\nid username\n"):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∫–≤–µ—Å—Ç–∞ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ id –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    answer = "" + start_message
    for user_id in botlib.list_players.keys():
        if botlib.list_players[str(user_id)]["step"] == getMaxQuestLevel():
            answer += f"{user_id} @{botlib.list_players[str(user_id)]['username']}\n"
    return answer


# —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ª–æ–≤–∞ –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@bot.message_handler(commands=["–±–æ—Ç"])
def message_admin_interface(message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    user_id = message.from_user.id
    text = message.text.lower()
    username = message.from_user.username

    if str(user_id) in botlib.CONST_ADMINLIST:
        # –ø–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã
        args = text.split()

        if len(args) == 1:
            # –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–∞–±—Ä–∞–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ - —Å–æ–æ–±—â–∏–º –∞–¥–º–∏–Ω—É –æ–± —ç—Ç–æ–º
            bot.send_message(user_id, "üçï –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–¥–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø—Ä–∏–º–µ—Ä: `/–±–æ—Ç –æ–±–Ω–æ–≤–∏—Ç—å`", parse_mode="markdown")
        else:
            try:
                # –≤—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
                command = dict_admin_ui[args[1]]["function"]()

                # –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –µ–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
                if isinstance(command, str):
                    bot.send_message(user_id, command)

                # –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä - –Ω–µ –±–æ—Å—Å, —É–≤–µ–¥–æ–º–ª—è–µ–º –æ–± —É—Å–ø–µ—Ö–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –∫–æ–º–∞–Ω–¥—ã
                if user_id != BOSS_ID:
                    bot.send_message(user_id, f"üçï –ö–æ–º–∞–Ω–¥–∞ `{text}` —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!", parse_mode="markdown")
                # –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–∏—à–µ–º –±–æ—Å—Å—É, —á—Ç–æ –Ω–µ–∫—Ç–æ –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É
                bot.send_message(BOSS_ID, f"üçï –ö–æ–º–∞–Ω–¥–∞ `{text}` –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º @{username}", parse_mode="markdown")
            except Exception:
                # –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ - —Å–æ–æ–±—â–∏–º –∞–¥–º–∏–Ω—É –æ–± —ç—Ç–æ–º
                bot.send_message(user_id, f"üçï –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ª–∏–±–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!\n\n"+getHelpAdmin(), parse_mode="markdown")
    else:
        bot.send_message(user_id, random.choice(botlib.CONST["random_messages"]))


# –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–∏—Å–∞—Ç—å –ª—é–±—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞
@bot.message_handler(commands=["message"])
def message_touser_validator(message):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ id"""
    user_id = message.from_user.id
    text = message.text.lower()
    username = message.from_user.username

    # –æ–±–Ω—É–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º –±–æ—Ç–∞
    if str(user_id) in botlib.CONST_ADMINLIST:
        try:
            # –ø–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–ø–æ—á—Ç–∏ –∫–∞–∫ –≤ sys.args)
            args = text.split()

            # —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, —Å–æ–æ–±—â–∞–µ–º –æ–± —É—Å–ø–µ—Ö–µ –∞–¥–º–∏–Ω—É –∏ –≥–ª–∞–≤–Ω–æ–º—É –∞–¥–º–∏–Ω—É
            bot.send_message(int(args[1]), " ".join(args[2:]))
            bot.send_message(user_id, f"üçï –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é `{args[1]}`\n\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n{' '.join(args[2:])}", parse_mode="markdown")
            bot.send_message(BOSS_ID, f"üçï –ö–æ–º–∞–Ω–¥–∞ `{text}` –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º @{username}\n\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:\n{' '.join(args[2:])}", parse_mode="markdown")
        except Exception:
            # –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Å–æ–æ–±—â–∏–º –æ–± —ç—Ç–æ–º
            bot.send_message(user_id, f"üçï –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ª–∏–±–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!\n\n" + getHelpAdmin(), parse_mode="markdown")


# –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±–Ω—É–ª–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
@bot.message_handler(commands=["zero"])
def message_hint_validator(message):
    """–§—É–Ω–∫—Ü–∏—è –æ–±–Ω—É–ª—è–µ—Ç –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ ID"""
    user_id = message.from_user.id
    text = message.text.lower()
    username = message.from_user.username

    # –æ–±–Ω—É–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º –±–æ—Ç–∞
    if str(user_id) in botlib.CONST_ADMINLIST:
        try:
            # –ø–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã (–ø–æ—á—Ç–∏ –∫–∞–∫ –≤ sys.args)
            args = text.split()
            # –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–∞–∫: /zero me
            if args[1] == "me":
                # –æ–±–Ω—É–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞ —É –Ω–∞–ø–∏—Å–∞–≤—à–µ–≥–æ –∞–¥–º–∏–Ω–∞
                setZeroProgress(user_id)
                # –ü–∏—à–µ–º —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω—É–ª–µ–Ω
                bot.send_message(user_id, "üçï –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±–Ω—É–ª–µ–Ω!")
            else:
                # –∏–Ω–∞—á–µ —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —è–≤–ª—è–µ—Ç—Å—è id –∫–∞–∫–æ–≥–æ-—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                setZeroProgress(int(args[1]))
                # —É–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –æ–±–Ω—É–ª–µ–Ω–∏–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∞–¥–º–∏–Ω–∞, –∑–∞–ø—Ä–æ—Å–∏–≤—à–µ–≥–æ –æ–±–Ω—É–ª–µ–Ω–∏–µ
                bot.send_message(user_id,f"üçï –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è `{args[1]}` –æ–±–Ω—É–ª–µ–Ω!", parse_mode="markdown")
                bot.send_message(int(args[1]),f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –æ–±–Ω—É–ª—É–ª–∏ –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ –∫–≤–µ—Å—Ç–∞\n\n–£–∑–Ω–∞—Ç—å, –ø–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–æ–∏–∑–æ—à–ª–æ: @{username}", parse_mode="markdown")
                bot.send_message(BOSS_ID, f"üçï –ö–æ–º–∞–Ω–¥–∞ `{text}` –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º @{username}", parse_mode="markdown")
        except Exception:
            # –≤ —Å–ª—É—á–∞–µ –∫–∞–∫–æ–π –ª–∏–±–æ –æ—à–∏–±–∫–∏ - –ø–∏—à–µ–º –æ–± —ç—Ç–æ–º –∞–¥–º–∏–Ω—É
            bot.send_message(user_id,f"üçï –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ª–∏–±–æ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!\n\n" + getHelpAdmin(), parse_mode="markdown")


# –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫
@bot.message_handler(commands=["hint"])
def message_hint_validator(message):
    """–§—É–Ω–∫—Ü–∏—è –≤—ã—Å—ã–ª–∞–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —ç—Ç–∞–ø—É"""
    user_id = message.from_user.id
    text = message.text.lower()
    username = message.from_user.username

    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º
    if json.loads(botlib.github.get_file(botlib.CONST["userProgressFile"], botlib.CONST_GITHUB_CONTENT_BRANCH_NAME))[str(user_id)]["iswinner"] == 0:
        try:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞ –Ω–∞ GitHub —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
            bot.send_message(user_id, botlib.github.get_file(botlib.CONST_DIR_NAMES["hints"] + f"/hint{botlib.list_players[str(user_id)]['step'] - 1}.md", botlib.CONST_GITHUB_CONTENT_BRANCH_NAME), parse_mode="markdown")
        except Exception:
            # –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–µ—Ç –Ω–∞ GitHub - –ø–∏—à–µ–º –Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–µ
            bot.send_message(user_id, "_" + random.choice(botlib.CONST["random_hintGetError"]) + "_", parse_mode="markdown")



# –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä. –û–Ω –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ—Ç –∫–≤–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
@bot.message_handler(content_types="text")
def message_validator(message):
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id = message.from_user.id
    text = message.text.lower()
    username = message.from_user.username

    # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–±—â–∏–π —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        # —Å–æ—Ö—Ä–∞–Ω–∏–º —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_info = {"username": username, "step": int(botlib.list_players[str(user_id)]["step"]), "iswinner": 0}
    except KeyError:
        # –µ—Å–ª–∏ –∂–µ —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–∏—Ä–∞–∑—É –Ω–∞–º –Ω–µ –ø–∏—Å–∞–ª - —Å–æ–∑–¥–∞–¥–∏–º –¥–ª—è –Ω–µ–≥–æ –æ—Ç–¥–µ–ª—å–Ω—É—é —Å–µ–∫—Ü–∏—é
        user_info = {"username": username, "step": 0, "iswinner": 0}

    # –∏ –∑–∞–ø–∏—à–µ–º –≤ –Ω–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å
    botlib.list_players[str(user_id)] = user_info

    try:
        # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∫–≤–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è
        if text in botlib.CONST["messages"]["step" + str(botlib.list_players[str(user_id)]["step"])]["trigger"].split(","):

            try:
                # —Å–Ω–∞—á–∞–ª–∞ –ø—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —è–≤–Ω—ã–π –æ—Ç–≤–µ—Ç –∏–∑ –∫–ª—é—á–∞ answer
                bot.send_message(user_id, botlib.CONST["messages"]["step" + str(botlib.list_players[str(user_id)]["step"])]["answer"], parse_mode="markdown")
            except Exception:
                # –µ—Å–ª–∏ –∫–ª—é—á–∞ answer –Ω–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞ —Å –æ—Ç–≤–µ—Ç–æ–º
                # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ñ–∞–π–ª—ã —Å —Ä–µ–ø–ª–∏–∫–∞–º–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ "–†–µ–ø–ª–∏–∫–∏/" –∏ –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è "answer{number}.md"
                try:
                    bot.send_message(user_id, botlib.answer_texts[botlib.list_players[str(user_id)]["step"]], parse_mode="markdown")
                except Exception:
                    # –µ—Å–ª–∏ –∂–µ –∏ —Ç–∞–∫–æ–≥–æ –∫–ª—é—á–∞ –Ω–µ—Ç - –ø–∏—à–µ–º, —á—Ç–æ –±–æ—Ç –Ω–µ—á–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç—å
                    bot.send_message(user_id, "–ú–Ω–µ –Ω–µ—á–µ–≥–æ —Ç–µ–±–µ –æ—Ç–≤–µ—Ç–∏—Ç—å...")

            # –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ
            try:
                bot.send_photo(user_id, botlib.github.get_file_new_method(botlib.CONST_DIR_NAMES["images"] + "/" + botlib.CONST["messages"]["step" + str(botlib.list_players[str(user_id)]["step"])]["image"], botlib.CONST_GITHUB_CONTENT_BRANCH_NAME))
            except Exception:
                pass
            # –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞—É–¥–∏–æ
            try:
                bot.send_audio(user_id, botlib.github.get_file_new_method(botlib.CONST_DIR_NAMES["audios"] + "/" + botlib.CONST["messages"]["step" + str(botlib.list_players[str(user_id)]["step"])]["audio"], botlib.CONST_GITHUB_CONTENT_BRANCH_NAME))
            except Exception:
                pass
            # –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç
            try:
                bot.send_document(user_id, botlib.github.get_file_new_method(botlib.CONST_DIR_NAMES["files"] + "/" + botlib.CONST["messages"]["step" + str(botlib.list_players[str(user_id)]["step"])]["doc"], botlib.CONST_GITHUB_CONTENT_BRANCH_NAME))
            except Exception:
                pass

            if botlib.list_players[str(user_id)]["step"] == 9:
                bot.send_message(user_id, '–î–ª—è –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–≤—è–∑–∏ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–≤—è–∑—å"', parse_mode="markdown", reply_markup=kb_end_quest)

            # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            increaseProgressLevel(user_id)

        else:
            bot.send_message(user_id, "_" + random.choice(botlib.CONST["random_messages"]) + "_", parse_mode="markdown")
    except Exception:
        # –û–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –¥–≤–∞ —É—Å–ª–æ–≤–∏—è:
        #   –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –≤ —Ç—Ä–∏–≥–≥–µ—Ä–µ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        #   –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫–∞ —Ä–∞–≤–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –∏ —Å—Ç–∞—Ç—É—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –Ω–∞ –≥–∏—Ç—Ö–∞–±–µ, —Ä–∞–≤–µ–Ω 0
        if text in botlib.CONST["messages"]["finalMessage"]["trigger"] and json.loads(botlib.github.get_file(botlib.CONST["userProgressFile"], botlib.CONST_GITHUB_CONTENT_BRANCH_NAME))[str(user_id)]["iswinner"] == 0:
            bot.send_message(user_id, botlib.github.get_file(botlib.CONST_DIR_NAMES["replicates"] + "/answer_final.md", botlib.CONST_GITHUB_CONTENT_BRANCH_NAME), parse_mode="markdown", reply_markup=types.ReplyKeyboardRemove())

            # –µ—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä–æ–∫–∞ —Ä–∞–≤–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É –∏ —Å—Ç–∞—Ç—É—Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –Ω–∞ –≥–∏—Ç—Ö–∞–±–µ, —Ä–∞–≤–µ–Ω 0
            # (–Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º) - –≤—ã—Å–ª–∞—Ç—å –Ω–∏–∫ –∏–≥—Ä–æ–∫–∞ –≤ –∫–∞–Ω–∞–ª –∏ –∑–∞–ø–∏—Å–∞—Ç—å –µ–≥–æ –∫–∞–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
            if botlib.list_players[str(user_id)]["step"] == getMaxQuestLevel() and json.loads(botlib.github.get_file(botlib.CONST["userProgressFile"], botlib.CONST_GITHUB_CONTENT_BRANCH_NAME))[str(user_id)]["iswinner"] == 0:
                
                # –¥–µ–ª–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º
                botlib.list_players[str(user_id)]["iswinner"] = 1
                
                # –ø–∏—à–µ–º –≤ –∫–∞–Ω–∞–ª –µ–≥–æ –Ω–∏–∫
                bot.send_message(botlib.env.TELEGRAM_CHANNEL_ID, f"–ù–û–í–´–ô –ü–û–ë–ï–î–ò–¢–ï–õ–¨\n\n–ù–∏–∫–Ω–µ–π–º: @{username}\nID: {user_id}")
                
                # –∏ –±–æ—Å—Å—É –≤ –ª–∏—á–∫—É
                bot.send_message(BOSS_ID, f"–ù–û–í–´–ô –ü–û–ë–ï–î–ò–¢–ï–õ–¨\n\n–ù–∏–∫–Ω–µ–π–º: @{username}\nID: {user_id}")
                
                # –∞ —Ç–∞–∫–∂–µ –∫–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –µ–≥–æ —Å–µ–∫—Ü–∏–∏
                botlib.github.commit(filepath=botlib.CONST["userProgressFile"],
                                     filecontent=json.dumps(botlib.list_players),
                                     branch=botlib.CONST_GITHUB_CONTENT_BRANCH_NAME,
                                     commit_message=f'{botlib.list_players[str(user_id)]["username"]} ({user_id}) ‚Üí –ø–æ–±–µ–¥–∏—Ç–µ–ª—å')

        # –∏–Ω–∞—á–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º –∫–≤–µ—Å—Ç–∞
        elif json.loads(botlib.github.get_file(botlib.CONST["userProgressFile"], botlib.CONST_GITHUB_CONTENT_BRANCH_NAME))[str(user_id)]["iswinner"] == 0:
            # –≤—ã—Å–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ–ø–æ–Ω–∏–º–∞–Ω–∏–µ
            bot.send_message(user_id, "_" + random.choice(botlib.CONST["random_messages"]) + "_", parse_mode="markdown")


bot.infinity_polling()